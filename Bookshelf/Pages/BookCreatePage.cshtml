@page "/bookcreate"

@using Bookshelf.ViewModel.Page
@using Microsoft.AspNetCore.Components.Services

@inject ApiClient apiClient
@inject IUriHelper uriHelper

<h1>@vm.PageTitle</h1>

<table>
    <tr>
        <td></td>
        <td style="color:red">@vm.TitleMessage</td>
    </tr>
    <tr>
        <td>Titre</td>
        <td><input type="text" bind="@vm.Title" /></td>
    </tr>
    <tr>
        <td></td>
        <td style="color:red">@vm.YearMessage</td>
    </tr>
    <tr>
        <td>Année</td>
        <td><input type="text" bind="@vm.Year" /></td>
    </tr>

    <tr>
        <td></td>
        <td style="color:red">@vm.PublisherMessage</td>
    </tr>
    <tr>
        <td>Editeur</td>
        <td>
            <select bind="@vm.PublisherId">
                @if(vm.Publishers.Count() == 0)
                {
                <option>Chargement des éditeurs...</option>
                }
                else
                {
                    foreach(var v in vm.Publishers)
                    {
                <option value="@v.Id">@v.Name</option>
                    }
                }
            </select>
        </td>
    </tr>

    <tr>
        <td rowspan="2"><button onclick="@vm.Ajouter">Ajouter</button></td>
    </tr>
</table>

@functions{
    BookCreatePageViewModel vm = null;

    protected override void OnInit()
    {
        Console.WriteLine("Init BookCreatePage A");
        base.OnInit();
        Console.WriteLine("Init BookCreatePage B");
        vm = new BookCreatePageViewModel(uriHelper, apiClient);

        Console.WriteLine("Init BookCreatePage C");
    }

    protected override async Task OnInitAsync()
    {
            Console.WriteLine("OnInitAsync A");
        vm.LoadAsync();
            Console.WriteLine("OnInitAsync B");
    }
}